#!/bin/bash

# Configuration
REPO_URL="https://github.com/Marshal-AM/frankyv3.git"
REPO_DIR="ZerePy"
VENV_DIR="venv"
PORT=8000

# Function to check if command exists
command_exists() {
    command -v "$1" >/dev/null 2>&1
}

# Function to check dependencies
check_dependencies() {
    echo "Checking dependencies..."
    
    # Check if Python is installed
    if ! command_exists python3; then
        echo "Error: Python 3 is not installed. Please install Python 3 and try again."
        exit 1
    fi
    
    # Check if git is installed
    if ! command_exists git; then
        echo "Error: Git is not installed. Please install Git and try again."
        exit 1
    fi
    
    # Check if ngrok is installed (for serve command)
    if [ "$1" == "serve" ] && ! command_exists ngrok; then
        echo "Error: ngrok is not installed. Please install ngrok and try again."
        exit 1
    fi
}

# Install command
install() {
    check_dependencies "install"
    
    echo "Installing ZerePy..."
    
    # Clone the repository if it doesn't exist
    if [ ! -d "$REPO_DIR" ]; then
        echo "Cloning repository from $REPO_URL..."
        git clone "$REPO_URL"
        if [ $? -ne 0 ]; then
            echo "Error: Failed to clone repository."
            exit 1
        fi
    else
        echo "Repository already exists. Updating..."
        cd "$REPO_DIR"
        git pull
        cd ..
    fi
    
    # Change to repository directory
    cd "$REPO_DIR"
    
    # Create virtual environment if it doesn't exist
    if [ ! -d "$VENV_DIR" ]; then
        echo "Creating virtual environment..."
        python3 -m venv "$VENV_DIR"
        if [ $? -ne 0 ]; then
            echo "Error: Failed to create virtual environment."
            exit 1
        fi
    else
        echo "Virtual environment already exists."
    fi
    
    # Activate virtual environment and install dependencies
    echo "Installing dependencies..."
    source "$VENV_DIR/bin/activate"
    pip install --upgrade pip
    if [ -f "requirements.txt" ]; then
        pip install -r requirements.txt
    else
        echo "Warning: requirements.txt not found. Using poetry install instead..."
        if command_exists poetry; then
            poetry install --no-root
        else
            echo "Error: Poetry is not installed and requirements.txt not found."
            echo "Please install Poetry or create a requirements.txt file."
            exit 1
        fi
    fi
    
    # Deactivate virtual environment
    deactivate
    
    echo "Installation complete! You can now run 'franky serve' to start the server."
    
    # Create activation instructions
    echo ""
    echo "To manually activate the virtual environment, run:"
    echo "  cd $REPO_DIR && source $VENV_DIR/bin/activate"
}

# Serve command
serve() {
    check_dependencies "serve"
    
    # Check if repository directory exists
    if [ ! -d "$REPO_DIR" ]; then
        echo "Error: ZerePy directory not found. Please run 'franky install' first."
        exit 1
    fi
    
    # Change to repository directory
    cd "$REPO_DIR"
    
    # Check if virtual environment exists
    if [ ! -d "$VENV_DIR" ]; then
        echo "Error: Virtual environment not found. Please run 'franky install' first."
        exit 1
    fi
    
    # Activate virtual environment and start server
    echo "Starting server on port $PORT..."
    source "$VENV_DIR/bin/activate"
    
    # Start the server in the background
    python main.py --server --port $PORT &
    SERVER_PID=$!
    
    # Give the server a moment to start
    sleep 2
    
    # Check if server started successfully
    if ! ps -p $SERVER_PID > /dev/null; then
        echo "Error: Server failed to start."
        exit 1
    fi
    
    echo "Server running with PID: $SERVER_PID"
    echo "Starting ngrok for port forwarding..."
    
    # Set up port forwarding with ngrok
    ngrok http $PORT
    
    # When ngrok is closed, kill the server
    kill $SERVER_PID 2>/dev/null
    echo "Server stopped."
}

# Main function
main() {
    case "$1" in
        "install")
            install
            ;;
        "serve")
            serve
            ;;
        *)
            echo "Usage: franky [command]"
            echo "Commands:"
            echo "  install    Clone repository, create virtual environment, and install dependencies"
            echo "  serve      Start the server and set up port forwarding with ngrok"
            exit 1
            ;;
    esac
}

# Run main function with all arguments
main "$@"
